debug: false

---

spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/ecommerce
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: admin
    password: admin
    publisher-confirm-type: correlated  # o simple para confirmaciones b√°sicas
    publisher-returns: true

---

server:
  port: 8093

---

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true  # Enables Circuit Breaker health status to be available through Actuator
        slidingWindowSize: 10  # Number of calls that the Circuit Breaker will evaluate to calculate the failure rate (sliding window)
        minimumNumberOfCalls: 5  # Minimum number of calls required before the Circuit Breaker in state closed evaluates whether to open or not
        failureRateThreshold: 30  # Failure rate percentage that triggers the transition from CLOSED to OPEN
        permittedNumberOfCallsInHalfOpenState: 3  # Number of calls allowed while in HALF_OPEN state to test if the service has recovered
        automaticTransitionFromOpenToHalfOpenEnabled: true  # If enabled, the Circuit Breaker will automatically move from OPEN to HALF_OPEN after the configured time
        waitDurationInOpenState: 35s  # Duration the Circuit Breaker remains in OPEN state before transitioning to HALF_OPEN
        eventConsumerBufferSize: 10  # Size of the event buffer used to publish events to consumers (such as logs, metrics, etc.)
        recordExceptions:
          - java.util.concurrent.TimeoutException
          - java.lang.RuntimeException
  #        ignoreExceptions:
  #          - com.aug.ecommerce.domain.exception.ErrorNegocioException
  retry:
    instances:
      processPaymentWompiRetry:  # Put this in the method configured
        maxAttempts: 3           # Total attempts: 1 original + 2 retries
        waitDuration: 1s         # Wait time of 1 second between attempts
        retryExceptions:
          - java.util.concurrent.TimeoutException
          - java.lang.RuntimeException
#        ignoreExceptions:
#          - com.aug.ecommerce.domain.exception.ErrorNegocioException

---

app:
  eventRabbitmq:
    exchange-topic: ecommerce.topicexchange  # Exchange Ppal, enruta basado en el routing key
    exchange-fanout: ecommerce.fanoutexchange # Exchange intermedio para enviar multiples mensajes desde el Exchange Ppal
